{"id":"models\\reducers\\root.reducer.js","dependencies":[{"name":"C:\\Users\\Full Stack Web 7\\Desktop\\EGERIA.V3\\client\\package.json","includedInParent":true,"mtime":1554299302192},{"name":"C:\\Users\\Full Stack Web 7\\Desktop\\EGERIA.V3\\client\\.babelrc","includedInParent":true,"mtime":1554278467137},{"name":"./root.state","loc":{"line":1,"column":33},"parent":"C:\\Users\\Full Stack Web 7\\Desktop\\EGERIA.V3\\client\\src\\models\\reducers\\root.reducer.js","resolved":"C:\\Users\\Full Stack Web 7\\Desktop\\EGERIA.V3\\client\\src\\models\\reducers\\root.state.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.rootReducer = rootReducer;\n\nvar _root = require('./root.state');\n\nfunction rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _root.initialRootState;\n  var action = arguments[1];\n  //recibe el estado global por defecto, y un param llamado action: el objeto q devuelve la accion en root.action. \n  switch (action.type) {\n    case 'CHANGE_TEXT':\n      return _extends({}, state, { // aqui se modifica el estado, '...' me destructura el array, como si lo escribiera complet, para q solo me sobrescriba la propiedad text (en este caso)\n        text: action.payload // me coge la clave texto y le paso el valor action.payload, q me viene del componente\n      });\n    default:\n      return state;\n  }\n}\n// desestrecturamos para q no nos borre nada. En el case delete: solo me borraria la prop text, name queda intacta.","map":{"mappings":[{"name":"rootReducer","generated":{"line":9,"column":8},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":16}},{"name":"rootReducer","generated":{"line":9,"column":22},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":16}},{"generated":{"line":11,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":7}},{"name":"rootReducer","generated":{"line":13,"column":9},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":16}},{"generated":{"line":13,"column":20},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":7}},{"generated":{"line":13,"column":23},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"generated":{"line":14,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"name":"state","generated":{"line":14,"column":6},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":28}},{"generated":{"line":14,"column":11},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"name":"initialRootState","generated":{"line":14,"column":82},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":36}},{"generated":{"line":14,"column":104},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"generated":{"line":15,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"name":"action","generated":{"line":15,"column":6},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":54}},{"generated":{"line":15,"column":12},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":62}},{"generated":{"line":16,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":3,"column":64}},{"generated":{"line":17,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":4,"column":2}},{"name":"action","generated":{"line":17,"column":10},"source":"models\\reducers\\root.reducer.js","original":{"line":4,"column":10}},{"name":"type","generated":{"line":17,"column":17},"source":"models\\reducers\\root.reducer.js","original":{"line":4,"column":17}},{"generated":{"line":17,"column":21},"source":"models\\reducers\\root.reducer.js","original":{"line":4,"column":2}},{"generated":{"line":18,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":5,"column":4}},{"generated":{"line":18,"column":9},"source":"models\\reducers\\root.reducer.js","original":{"line":5,"column":9}},{"generated":{"line":18,"column":22},"source":"models\\reducers\\root.reducer.js","original":{"line":5,"column":4}},{"generated":{"line":19,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":6,"column":6}},{"name":"state","generated":{"line":19,"column":26},"source":"models\\reducers\\root.reducer.js","original":{"line":7,"column":11}},{"generated":{"line":19,"column":31},"source":"models\\reducers\\root.reducer.js","original":{"line":6,"column":6}},{"generated":{"line":19,"column":35},"source":"models\\reducers\\root.reducer.js","original":{"line":7,"column":18}},{"name":"text","generated":{"line":20,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":8,"column":8}},{"name":"action","generated":{"line":20,"column":14},"source":"models\\reducers\\root.reducer.js","original":{"line":8,"column":14}},{"name":"payload","generated":{"line":20,"column":21},"source":"models\\reducers\\root.reducer.js","original":{"line":8,"column":21}},{"generated":{"line":20,"column":28},"source":"models\\reducers\\root.reducer.js","original":{"line":6,"column":6}},{"generated":{"line":20,"column":29},"source":"models\\reducers\\root.reducer.js","original":{"line":8,"column":30}},{"generated":{"line":21,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":6,"column":6}},{"generated":{"line":22,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":10,"column":4}},{"generated":{"line":23,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":11,"column":6}},{"name":"state","generated":{"line":23,"column":13},"source":"models\\reducers\\root.reducer.js","original":{"line":11,"column":13}},{"generated":{"line":23,"column":18},"source":"models\\reducers\\root.reducer.js","original":{"line":11,"column":6}},{"generated":{"line":24,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":4,"column":2}},{"generated":{"line":25,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":13,"column":1}},{"generated":{"line":26,"column":0},"source":"models\\reducers\\root.reducer.js","original":{"line":14,"column":0}}],"sources":{"models\\reducers\\root.reducer.js":"import { initialRootState } from './root.state';\r\n\r\nexport function rootReducer(state = initialRootState, action) { //recibe el estado global por defecto, y un param llamado action: el objeto q devuelve la accion en root.action. \r\n  switch (action.type) {\r\n    case 'CHANGE_TEXT':\r\n      return {\r\n        ...state, // aqui se modifica el estado, '...' me destructura el array, como si lo escribiera complet, para q solo me sobrescriba la propiedad text (en este caso)\r\n        text: action.payload, // me coge la clave texto y le paso el valor action.payload, q me viene del componente\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n// desestrecturamos para q no nos borre nada. En el case delete: solo me borraria la prop text, name queda intacta.\r\n"},"lineCount":null}},"hash":"306da3cf2706fc1ac6434de6c87ce82a","cacheData":{"env":{}}}